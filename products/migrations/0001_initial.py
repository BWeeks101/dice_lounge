# Generated by Django 3.2.4 on 2021-07-26 13:12

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import products.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Category Identifier')),
                ('name', models.CharField(help_text='Please enter a descriptive name for this Category.', max_length=254, unique=True, verbose_name='Category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Genre Identifier')),
                ('name', models.CharField(help_text='Please enter a descriptive name for this Genre.', max_length=254, unique=True, verbose_name='Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Product Line Identifier')),
                ('name', models.CharField(help_text='Please enter a descriptive name for this Product Line.', max_length=254, unique=True, verbose_name='Product Line')),
                ('description', models.TextField(help_text='Please enter a description for this Product Line.')),
                ('image', models.ImageField(blank=True, help_text='(Optional) Please add an image for this Product Line.', null=True, upload_to='')),
                ('category', models.ForeignKey(help_text='Please select a category for this Product Line.', on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('genre', models.ForeignKey(help_text='Please select a genre for this Product Line.', on_delete=django.db.models.deletion.CASCADE, to='products.genre')),
            ],
            options={
                'verbose_name': 'Product Line',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Publisher Identifier')),
                ('name', models.CharField(help_text='Please enter a descriptive name for this Publisher.', max_length=254, unique=True, verbose_name='Publisher')),
            ],
        ),
        migrations.CreateModel(
            name='Reduced_Reason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Reduced Price Reason Identifier')),
                ('reason', models.CharField(help_text='Please enter a descriptive name for this Reduced Price Reason.', max_length=254, unique=True, verbose_name='Reduced Price Reason')),
                ('default_reduction_percentage', models.IntegerField(default=5, help_text='Please enter a default reduction % for this reason (0-75).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(75)], verbose_name='Default Price Reduction Percentage')),
            ],
            options={
                'verbose_name': 'Reduced Price Reason',
            },
        ),
        migrations.CreateModel(
            name='Stock_State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Stock State Identifier')),
                ('state', models.CharField(help_text='Please enter a descriptive name for this Stock State.', max_length=254, unique=True, verbose_name='Stock State')),
                ('available', models.BooleanField(default=False, help_text='Does this Stock State indicate that items are available to order?', verbose_name='Available to Order?')),
            ],
            options={
                'verbose_name': 'Stock State',
            },
        ),
        migrations.CreateModel(
            name='Sub_Product_Line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Sub Product Line Identifier')),
                ('name', models.CharField(help_text='Please enter a descriptive name for this Sub Product Line.', max_length=254, verbose_name='Sub Product Line')),
                ('description', models.TextField(help_text='Please enter a description for this Sub Product Line')),
                ('core_set', models.BooleanField(default=False, help_text='Does this Sub Product Line contain Core Sets/Rules?')),
                ('scenics', models.BooleanField(default=False, help_text='Does this Sub Product Line contain Scenics and/or Terrain?')),
                ('image', models.ImageField(blank=True, help_text='(Optional) Please add an image for this Sub Product Line.', null=True, upload_to='')),
                ('product_line', models.ForeignKey(help_text='Please assign this Sub Product Line to a Product Line', on_delete=django.db.models.deletion.CASCADE, to='products.product_line')),
            ],
            options={
                'verbose_name': 'Sub Product Line',
            },
        ),
        migrations.AddField(
            model_name='product_line',
            name='publisher',
            field=models.ForeignKey(help_text='Please select a publisher for this Product Line.', on_delete=django.db.models.deletion.CASCADE, to='products.publisher'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Please use underscores instead of spaces.  Must be unique.', max_length=254, unique=True, validators=[products.models.validate_whitespace], verbose_name='Product Identifier')),
                ('name', models.CharField(help_text='Please enter a descriptive name for this Product.', max_length=254, verbose_name='Product Name')),
                ('description', models.TextField(blank=True, help_text='Please enter a description for this Product.')),
                ('image', models.ImageField(blank=True, help_text='(Optional) Please add an image for this Product.', null=True, upload_to='')),
                ('price', models.DecimalField(decimal_places=2, default=999.99, help_text='Please enter the price of this product (GBP).', max_digits=6, validators=[django.core.validators.DecimalValidator(6, 2), django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reduced', models.BooleanField(default=False, help_text='Is the price of this item reduced?', verbose_name='Reduced?')),
                ('reduced_percentage', models.IntegerField(default=0, help_text='Please enter the % to reduce the price by (0-75).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(75)], verbose_name='Reduction %')),
                ('reduced_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Auto calculated.  Do not update this field.', max_digits=6, validators=[django.core.validators.DecimalValidator(6, 2), django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('stock', models.IntegerField(default=0, help_text='Please enter the number of units of this product in stock.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Units in Stock')),
                ('max_per_purchase', models.IntegerField(default=10, help_text='Please enter the max number of units (1-10) available to a single purchase', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Max Units Per Purchase')),
                ('reduced_reason', models.ForeignKey(blank=True, help_text='Why is this product reduced?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.reduced_reason', verbose_name='Reason for Reduction')),
                ('stock_state', models.ForeignKey(default=2, help_text='What is the stock status of this product?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.stock_state', verbose_name='Stock State')),
                ('sub_product_line', models.ForeignKey(help_text='Please assign this Product to a Sub Product Line.', on_delete=django.db.models.deletion.CASCADE, to='products.sub_product_line', verbose_name='Sub-Product Line')),
            ],
        ),
    ]
